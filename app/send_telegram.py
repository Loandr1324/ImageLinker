import asyncio
from aiogram import Bot
from aiogram.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from config import TOKEN_BOT, CHAT_ID

TOKEN = TOKEN_BOT
CHATID = CHAT_ID
bot = Bot(token=TOKEN_BOT)
# telegramBot = telepot.Bot(TOKEN)


def create_message(data: dict) -> (str, InlineKeyboardMarkup):
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param data: —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–∞–º–∏
    –ü—Ä–∏–º–µ—Ä:
    {
        'manager': '—Ç–µ—Å—Ç–ú',
        'client': '—Ç–µ—Å—Ç–ö',
        'car_model': 'CS55PLUS',
        'car_color': '–°–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π',
        'year_prod': '2025',
        'profit_car_body': 1,
        'profit_add_equip': 2,
        'profit_credit': 3,
        'comp_suppl': 4,
        'trade_in': 'Y',
        'credit': 'Y',
        'kasko': 'Y',
        'date_issue': '—Å–µ–≥–æ–¥–Ω—è',
    }
    :return: tuple(
        —Å—Ç—Ä–æ–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–π –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π,
        —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ InlineKeyboardMarkup —Å –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    """
    profit_car_body = data.get('profit_car_body')
    profit_add_equip = data.get('profit_add_equip')
    profit_credit = data.get('profit_credit')
    comp_suppl = data.get('comp_suppl')
    profit = int(profit_car_body) + int(profit_add_equip) + int(profit_credit) + int(comp_suppl)
    # TODO –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    # text = f"""üü° @Monareich, –ü—Ä–æ—Å—å–±–∞
    text = f"""üü° Monareich, –ü—Ä–æ—Å—å–±–∞
    —Å–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å:
    –ú–µ–Ω–µ–¥–∂–µ—Ä: {data.get('manager')}
    {data.get('client')}
    {data.get('car_model')}
    –¶–≤–µ—Ç: {data.get('car_color')}
    –ì–æ–¥: {data.get('year_prod')}
    –ñ: {profit_car_body}
    –û: {profit_add_equip}
    –ö: {profit_credit}
    –ö–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è: {comp_suppl}
    –¢—Ä–µ–π–¥-–∏–Ω: {data.get('trade_in')}
    –ö—Ä–µ–¥–∏—Ç: {data.get('credit')}
    –ö–ê–°–ö–û: {data.get('kasko')}
    –ò—Ç–æ–≥–æ = {profit}
    –í—ã–¥–∞—á–∞: {data.get('date_issue')}
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üü¢ –°–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å", callback_data=f"approve"),
         InlineKeyboardButton(text="üî¥ –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject")],
    ])
    return text, keyboard


def send_message(message: str, keyboard: InlineKeyboardMarkup | ReplyKeyboardMarkup) -> bool:
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç —Ç–µ–ª–µ–≥—Ä–∞–º
    :param message: —Å–æ–æ–±—â–µ–Ω–∏–µ
    :param keyboard: —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º
    :return:
    """
    try:
        asyncio.run(bot.send_message(CHATID, message, parse_mode="HTML", reply_markup=keyboard))
        return True
    except ConnectionError as ce:
        print('–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –±—ã–ª–∞ –Ω–µ—É–¥–∞—á–Ω–∞. –û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏:')
        print(ce)
        return False
